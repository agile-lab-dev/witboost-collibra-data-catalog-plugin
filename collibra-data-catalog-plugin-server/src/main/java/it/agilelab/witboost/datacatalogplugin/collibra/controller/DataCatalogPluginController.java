package it.agilelab.witboost.datacatalogplugin.collibra.controller;

import it.agilelab.witboost.datacatalogplugin.collibra.openapi.controller.V1ApiDelegate;
import it.agilelab.witboost.datacatalogplugin.collibra.openapi.controller.V2ApiDelegate;
import it.agilelab.witboost.datacatalogplugin.collibra.openapi.model.EntityReference;
import it.agilelab.witboost.datacatalogplugin.collibra.openapi.model.ProvisioningRequest;
import it.agilelab.witboost.datacatalogplugin.collibra.openapi.model.ProvisioningStatus;
import it.agilelab.witboost.datacatalogplugin.collibra.openapi.model.ValidationResult;
import it.agilelab.witboost.datacatalogplugin.collibra.service.DatacatalogService;
import java.util.Optional;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.context.request.NativeWebRequest;

/**
 * API Controller for the Data Catalog Plugin which implements the autogenerated {@link
 * V1ApiDelegate} and {@link V2ApiDelegate} interfaces. The interface defaults the endpoints to throw
 * 501 Not Implemented unless overridden in this class.
 *
 * <p>Exceptions thrown will be handled by {@link DataCatalogPluginExceptionHandler}
 */
@Service
public class DataCatalogPluginController implements V1ApiDelegate {

    private final DatacatalogService datacatalogService;

    public DataCatalogPluginController(DatacatalogService datacatalogService) {
        this.datacatalogService = datacatalogService;
    }

    @Deprecated(since = "Do not use, overridden here to fix unrelated inherited types error.", forRemoval = true)
    @Override
    public Optional<NativeWebRequest> getRequest() {
        return V1ApiDelegate.super.getRequest();
    }

    @Override
    public ResponseEntity<EntityReference> getEntityReference(String componentId) throws Exception {
        return ResponseEntity.ok(this.datacatalogService.getEntityReference(componentId));
    }

    @Override
    public ResponseEntity<ProvisioningStatus> getStatus(String token) throws Exception {
        // TODO implement async
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    @Override
    public ResponseEntity<ProvisioningStatus> provision(ProvisioningRequest provisioningRequest) throws Exception {
        return ResponseEntity.ok(this.datacatalogService.provision(provisioningRequest));
    }

    @Override
    public ResponseEntity<ProvisioningStatus> unprovision(ProvisioningRequest provisioningRequest) throws Exception {
        return ResponseEntity.ok(this.datacatalogService.unprovision(provisioningRequest));
    }

    @Override
    public ResponseEntity<ValidationResult> validate(ProvisioningRequest provisioningRequest) throws Exception {
        return ResponseEntity.ok(datacatalogService.validate(provisioningRequest));
    }

    // TODO: implement v2 APIs in V2ApiDelegate
    /*@Override
    public ResponseEntity<String> asyncValidate(ProvisioningRequest provisioningRequest) throws Exception {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    @Override
    public ResponseEntity<ValidationStatus> getValidationStatus(String token) throws Exception {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }*/
}
